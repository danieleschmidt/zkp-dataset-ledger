# Security-hardened Dockerfile for ZKP Dataset Ledger
# This variant prioritizes security for production deployments

# Build stage with security scanning
FROM rust:1.89-slim as builder

# Install security updates and minimal dependencies
RUN apt-get update && apt-get upgrade -y && apt-get install -y \
    pkg-config \
    libssl-dev \
    cmake \
    clang \
    build-essential \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for build
RUN groupadd -r builder && useradd -r -g builder builder

WORKDIR /usr/src/zkp-dataset-ledger

# Copy and build with minimal privileges
COPY --chown=builder:builder Cargo.toml Cargo.lock ./
COPY --chown=builder:builder src/ src/

# Switch to non-root user for build
USER builder

# Build with security features enabled
RUN cargo build --release --locked \
    --features "security-audit" \
    --target-dir /tmp/target

# Runtime stage - distroless for maximum security
FROM gcr.io/distroless/cc-debian12:nonroot

# Copy CA certificates for HTTPS
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy the binary from builder stage
COPY --from=builder --chown=nonroot:nonroot \
    /tmp/target/release/zkp-ledger /usr/local/bin/zkp-ledger

# Create secure data directory
USER nonroot
WORKDIR /data

# Security labels
LABEL security.policy="restricted" \
      security.scan.date="$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
      security.distroless="true" \
      security.nonroot="true"

# Health check with minimal privileges
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD ["/usr/local/bin/zkp-ledger", "--version"]

ENTRYPOINT ["/usr/local/bin/zkp-ledger"]
CMD ["--help"]